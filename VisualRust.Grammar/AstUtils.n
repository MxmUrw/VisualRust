using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nitra;

namespace VisualRust.Grammar
{
  public module AstUtils
  {
      public Filter(this value: ListParseTree[RulesParseTree.inner_attr]) : IEnumerable[RulesParseTree.inner_attr.inner_attr0]
      {
        value.OfType.[RulesParseTree.inner_attr.inner_attr0]()
      }
      
      public Convert_path_no_types_allowed(path_no_types_allowed : RulesParseTree.path_no_types_allowed) : PathReference.IAstList
      {
          def elems = path_no_types_allowed.Path_no_types_allowed_head.GetAst() :: NList.ToList(path_no_types_allowed.Path_no_types_allowed_tails).Map(_.GetAst());
          PathReference.AstList(path_no_types_allowed.Location, elems.ToArray());
      }
  }
}
